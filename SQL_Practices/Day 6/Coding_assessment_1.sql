--1.database
create database HotelManagementSystem

--2.tables
create table Hotels( 
HotelID int primary key,
Name varchar(50),
Location varchar(100),
Rating decimal(10,2) check(Rating between 1 and 5)
);

create table Rooms(
RoomID int primary key,
HotelID int foreign key references Hotels(HotelID),
RoomNumber varchar(10),
RoomType varchar(10) check(RoomType in ('Single','Double','Suite')),
PricePerNight decimal(10,2),
Available bit
);

create table Guests(
GuestID int primary key,
FullName varchar(50),
Email varchar(100) unique,
PhoneNumber varchar(15) unique,
CheckInDate date,
CheckOutDate date
);

create table Bookings(
BookingID int primary key,
GuestID int foreign key references Guests(GuestID),
RoomID int foreign key references Rooms(RoomID),
BookingDate date,
TotalAmount decimal(10,2),
Status varchar (20) check(Status in ('Confirmed', 'Cancelled','Checked Out'))
);

create table Payments(
PaymentID int primary key,
BookingID int foreign key references Bookings(BookingID),
AmountPaid decimal(10,2),
PaymentDate date,
PaymentMethod varchar(20) check(PaymentMethod in ('Credit Card','Cash','UPI'))
);

create table Events(
EventID int primary key,
HotelID int foreign key references Hotels(HotelID),
EventName varchar(50),
EventDate date,
Venue varchar(50)
);

create table EventParticipants(
ParticipantID int primary key,
ParticipantName varchar(50),
ParticipantType varchar(15) check (ParticipantType in('guest','organization')),
EventID int foreign key references Events(EventID)
);

--3.if the database or tables already exist before creating them.
if not exists (select * from sys.databases where name='HotelManagementSystem')
begin
create database HotelManagementSystem
end;
go

if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='Hotels')
begin
create table Hotels( 
HotelID int primary key,
Name varchar(50),
Location varchar(100),
Rating decimal(10,2) check(Rating between 1 and 5)
);
end;
go

--insert
-- Insert into Hotels
insert into Hotels values
(1, 'The Grand Palace', 'Chennai', 4.5),
(2, 'Ocean View Resort', 'Goa', 4.8),
(3, 'Skyline Hotel', 'Mumbai', 4.2),
(4, 'Royal Stay', 'Bangalore', 4.0),
(5, 'Mountain Retreat', 'Manali', 4.7);

-- Insert into Rooms
insert into Rooms values
(101, 1, 'A101', 'Single', 1200.00, 1),
(102, 1, 'A102', 'Double', 2500.00, 1),
(103, 2, 'B201', 'Suite', 5000.00, 0),
(104, 3, 'C301', 'Single', 1500.00, 1),
(105, 3, 'C302', 'Suite', 6000.00, 1);

-- Insert into Guests
insert into Guests values
(201, 'Rahul Sharma', 'rahul@gmail.com', '9876543210', '2024-03-25', '2024-03-28'),
(202, 'Ananya Verma', 'ananya@gmail.com', '9123456789', '2024-03-20', '2024-03-24'),
(203, 'John Doe', 'john.doe@email.com', '9456781234', '2024-03-22', '2024-03-26'),
(204, 'Priya Nair', 'priya.nair@email.com', '9786542310', '2024-03-21', '2024-03-25'),
(205, 'Amit Singh', 'amit.singh@email.com', '9988776655', '2024-03-23', '2024-03-27');

-- Insert into Bookings
insert into Bookings values
(301, 201, 101, '2024-03-20', 3600.00, 'Confirmed'),
(302, 202, 102, '2024-03-18', 7500.00, 'Checked Out'),
(303, 203, 104, '2024-03-19', 4500.00, 'Cancelled'),
(304, 204, 105, '2024-03-20', 18000.00, 'Confirmed'),
(305, 205, 103, '2024-03-21', 10000.00, 'Confirmed');

-- Insert into Payments
insert into Payments values
(401, 301, 3600.00, '2024-03-21', 'Credit Card'),
(402, 302, 7500.00, '2024-03-19', 'Cash'),
(403, 303, 4500.00, '2024-03-20', 'UPI'),
(404, 304, 18000.00, '2024-03-22', 'Credit Card'),
(405, 305, 10000.00, '2024-03-23', 'UPI');

-- Insert into Events
insert into Events values
(501, 1, 'Wedding Expo', '2024-04-10', 'Banquet Hall'),
(502, 2, 'Tech Summit', '2024-04-20', 'Conference Room'),
(503, 3, 'Music Fest', '2024-05-15', 'Open Ground'),
(504, 4, 'Food Carnival', '2024-06-01', 'Terrace'),
(505, 5, 'Startup Meetup', '2024-06-10', 'Ballroom');

-- Insert into EventParticipants
insert into EventParticipants values
(601, 'Rahul Sharma', 'guest', 501),
(602, 'ABC Corp', 'organization', 502),
(603, 'John Doe', 'guest', 503),
(604, 'Priya Nair', 'guest', 504),
(605, 'XYZ Ltd', 'organization', 505);

--4.retrieve a list of available rooms for booking (Available = 1).
select * from Rooms where Available=1

--5.specific hotel event using an @EventID parameter.
create procedure GetEventParticipants
    @EventID int
as begin
    select p.ParticipantName
    from EventParticipants p
    where p.EventID = @EventID;
end
go

--6.a hotel to update its information (name and location) 
create procedure UpdateHotelInfo
    @HotelID int,
    @NewName varchar(50),
    @NewLocation varchar(100)
as begin
    update Hotels
    set Name = @NewName,
        Location = @NewLocation
    where HotelID = @HotelID;
end

--7.total revenue generated by each hotel from confirmed bookings.
select h.Name , sum(b.TotalAmount) as TotalRevenue
from Hotels h
join Rooms r on h.HotelID=r.HotelID
join Bookings b on r.RoomID=b.RoomID
where  b.Status='Confirmed'
group by h.Name

--8.rooms that have never been booked 
select * from Rooms 
where RoomID not in (select distinct RoomID from Bookings)

--9.total payments per month and year
select format(PaymentDate, 'yyyy-MM') as MonthYear, sum(AmountPaid) as TotalPayments
from Payments
group by format(PaymentDate, 'yyyy-MM');

--10.priced between $50 and $150 per night or above $300 per night.
select RoomType from Rooms 
where PricePerNight between 50 and 150
or PricePerNight>300

--11.rooms along with their guests, including only rooms that are currently occupied.
select r.RoomID,g.GuestID
from Rooms r
join Bookings b on r.RoomID=b.RoomID
join Guests g on b.GuestID=g.GuestID

--12.total number of participants in events held in a specific city 
select count(ep.ParticipantID) as TotalParticipants
from EventParticipants ep
join Events e on e.EventID=ep.EventID
where e.Venue= 'Chennai'

--13.a list of unique room types available in a specific hotel
select distinct RoomType from Rooms
where HotelID=1

--15.names of all booked rooms along with the guests who booked them
select r.RoomNumber, g.FullName
from Rooms r
join Bookings b on r.RoomID=b.RoomID
join Guests g on b.GuestID=g.GuestID 

--16.all hotels along with the count of available rooms 
select h.Name, count(r.RoomID) as countofAvailableRooms
from Hotels h
join Rooms r on h.HotelID=r.HotelID
where r.Available=1
group by h.Name

--17.pairs of rooms from the same hotel that belong to the same room type.
select r1.RoomID, r2.RoomID, r1.HotelID, r1.RoomType
from Rooms r1, Rooms r2
where r1.RoomID < r2.RoomID AND r1.HotelID = r2.HotelID AND r1.RoomType = r2.RoomType;

--18.all possible combinations of hotels and events
select h.Name as Hotel,e.EventName as Event
from Hotels h,Events e

--19.hotel with the highest number of bookings.
select top 1 h.Name as HotelName,count(b.BookingID) as TotalBookings
from Bookings b
join Rooms r on b.RoomID=r.RoomID
join Hotels h on r.HotelID=h.HotelID
group by h.Name
order by TotalBookings desc